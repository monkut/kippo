version: 2.1

jobs:
  check:
    working_directory: ~/app/
    docker:
      - image: cimg/python:3.13
        environment:
          AWS_PROFILE: dummyprofile

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - restore_cache:
          key: deps-v1-{{ .Branch }}-{{ checksum "uv.lock" }}
      - run:
          name: Upgrade uv
          command: |
            pip install uv -U
      - run:
          name: install dependencies
          command: |
            uv sync
      - save_cache:
          key: deps-v1-{{ .Branch }}-{{ checksum "uv.lock" }}
          paths:
            - "/home/circleci/.aws"
            - "/home/circlci/.local"
            - "/usr/local/bin"

      - run:
          name: code checks (ruff)
          command: |
            make check

  test:
    working_directory: ~/app/
    docker:
      - image: cimg/python:3.13
        environment:
          AWS_PROFILE: dummyprofile
          AWS_ACCESS_KEY_ID: dummyaccesskey
          AWS_SECRET_ACCESS_KEY: dummysecretkey
          AWS_DEFAULT_REGION: ap-northeast-1
          BOTO3_S3_SERVICE_ENDPOINT: http://localhost.localstack.cloud:4566
          BOTO3_SQS_SERVICE_ENDPOINT: http://localhost:4566
          BOTO3_SNS_SERVICE_ENDPOINT: http://localhost:4566
          BOTO3_LAMBDA_SERVICE_ENDPOINT: http://localhost:4566
          USE_XML_TESTRUNNER: True
      - image: postgres:17
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: kippo
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: localstack/localstack:4.3.0
    parallelism: 16

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - restore_cache:
          key: deps-v1-{{ .Branch }}-{{ checksum "uv.lock" }}

      - run:
          name: prepare boto3 aws config/credentials
          command: |
            # create ~/.aws/config
            echo "Creating: ~/.aws/config"
            mkdir -p ~/.aws
            cat \<<EOT > ~/.aws/config
            [default]
            region = ${AWS_DEFAULT_REGION}
            output = json

            [profile ${AWS_PROFILE}]
            role_arn = ${AWS_ROLE_ARN}
            region = ${AWS_DEFAULT_REGION}
            source_profile = default
            EOT

            # create .aws/credentials
            echo "Creating: ~/.aws/credentials"
            cat \<<EOT > ~/.aws/credentials
            [default]
            aws_access_key_id = ${AWS_ACCESS_KEY_ID}
            aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
            EOT

      - run:
          name: Upgrade uv
          command: |
            pip install uv -U
      - run:
          name: install dependencies
          command: |
            uv sync
      - save_cache:
          key: deps-v1-{{ .Branch }}-{{ checksum "uv.lock" }}
          paths:
            - "/home/circleci/.aws"
            - "/home/circlci/.local"
            - "/usr/local/bin"

      - run:
          name: run tests
          command: |

            make test

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

  build-package:
    working_directory: ~/app/
    docker:
      - image: cimg/python:3.13
        environment:
          AWS_PROFILE: dummyprofile
          AWS_ACCESS_KEY_ID: dummyaccesskey
          AWS_SECRET_ACCESS_KEY: dummysecretkey
          AWS_DEFAULT_REGION: ap-northeast-1

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run:
          name: prepare boto3 aws config/credentials
          command: |
            # create ~/.aws/config
            echo "Creating: ~/.aws/config"
            mkdir -p ~/.aws
            cat \<<EOT > ~/.aws/config
            [default]
            region = ${AWS_DEFAULT_REGION}
            output = json

            [profile ${AWS_PROFILE}]
            role_arn = ${AWS_ROLE_ARN}
            region = ${AWS_DEFAULT_REGION}
            source_profile = default
            EOT

            # create .aws/credentials
            echo "Creating: ~/.aws/credentials"
            cat \<<EOT > ~/.aws/credentials
            [default]
            aws_access_key_id = ${AWS_ACCESS_KEY_ID}
            aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
            EOT

      - restore_cache:
          key: deps-v1-{{ .Branch }}-deploy-{{ checksum "uv.lock" }}
      - run:
          name: Upgrade pip & uv & install boto3
          command: |
            pip install pip -U
            pip install uv -U
            pip install boto3
      - run:
          name: install locked dependencies
          environment:
            PIP_NO_BINARY: pydantic
          command: |
            uv sync --no-dev
      - save_cache:
          key: deps-v1-{{ .Branch }}-deploy-{{ checksum "uv.lock" }}
          paths:
            - "/home/circleci/.aws"
            - "/home/circleci/.profile"
            - "/home/circleci/.local"
            - "/usr/local/bin"

      - run:
          name: build package
          command: | 
            cd ~/app
            mkdir -p ~/artifacts
            uv build
            cp dist/* /home/circleci/artifacts/
            

      - persist_to_workspace:
          name: persist to workspace
          root: /home/circleci/artifacts
          paths:
            - ./

workflows:
  ProjectWorkflow:
    jobs:
      - check
      - test
      - build-package:
          requires:
            - test
          filters:
            branches:
              only:
                - main
